import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as h,o as i,c as d,a,b as n,d as t,e as p}from"./app-22722871.js";const c={},s=p('<h1 id="什么是离散数学" tabindex="-1"><a class="header-anchor" href="#什么是离散数学" aria-hidden="true">#</a> 什么是离散数学</h1><p>离散与连续对立，连续以微积分为代表，离散这是一个个独立的个体。</p><p>风扇开关有 1,2,3 挡，是离散的；调节声音的旋钮，是连续的。</p><p>离散数学包含多个主题 topic，它是由以下各学科中的部分内容拼凑起来的。</p><h2 id="离散数学的-topics" tabindex="-1"><a class="header-anchor" href="#离散数学的-topics" aria-hidden="true">#</a> 离散数学的 topics</h2><h3 id="数理逻辑" tabindex="-1"><a class="header-anchor" href="#数理逻辑" aria-hidden="true">#</a> 数理逻辑</h3><p>逻辑学的符号化形式，包含命题逻辑、谓词逻辑</p><h3 id="集合论" tabindex="-1"><a class="header-anchor" href="#集合论" aria-hidden="true">#</a> 集合论</h3><p>以逻辑为基础，以集合为工具，表示和构造各种数学对象。</p><p>集合、( 二元 ) 关系、自然数</p><p>集合 =&gt; 二元关系 { 函数、等价关系、序关系 } =&gt; 自然数{ 基数、序数 }</p><p>![image-20231224235129124](/Users/yams/Library/Application Support/typora-user-images/image-20231224235129124.png)</p><h3 id="图论" tabindex="-1"><a class="header-anchor" href="#图论" aria-hidden="true">#</a> 图论</h3><p>以集合论为基础，以图为工具，为各种二元关系建立模型。</p><p>图、欧拉图、平面图、树、图的着色</p><p>![image-20231224235146938](/Users/yams/Library/Application Support/typora-user-images/image-20231224235146938.png)</p><h3 id="抽象代数" tabindex="-1"><a class="header-anchor" href="#抽象代数" aria-hidden="true">#</a> 抽象代数</h3><p>代数结构既可以是离散的，也可以是连续的。</p><p>代数结构既可以是离散的，也可以是连续的。离散代数包括逻辑门和编程中使用的逻辑代数、数据库中使用的关系代数、代数编码理论中重要的离散有限群、环和域、形式语言理论中的离散半群和幺半群。</p><h3 id="组合数学" tabindex="-1"><a class="header-anchor" href="#组合数学" aria-hidden="true">#</a> 组合数学</h3><h3 id="理论计算机科学" tabindex="-1"><a class="header-anchor" href="#理论计算机科学" aria-hidden="true">#</a> 理论计算机科学</h3><p>离散数学充分描述了计算机科学离散性的特点。</p><p>理论计算机科学（Theoretical computer science）包含离散数学计算的领域，并特别注重图论和数理逻辑。理论计算机科学包括对计算数学结果的算法研究。可算性理论研究那些对象在原则上可被计算，和逻辑有密切联系。而复杂性则研究计算耗费的时间，自动机理论和形式语言理论与复杂性紧密联系。计算几何应用算法解决几何问题，而计算机图像分析则是应用算法在计算机中再现图像。理论计算机科学（Theoretical computer science）包含离散数学计算的领域，并特别注重图论和数理逻辑。理论计算机科学包括对计算数学结果的算法研究。可算性理论研究那些对象在原则上可被计算，和逻辑有密切联系。而复杂性则研究计算耗费的时间，自动机理论和形式语言理论与复杂性紧密联系。计算几何应用算法解决几何问题，而计算机图像分析则是应用算法在计算机中再现图像。</p><h3 id="拓扑学" tabindex="-1"><a class="header-anchor" href="#拓扑学" aria-hidden="true">#</a> 拓扑学</h3><h3 id="数论" tabindex="-1"><a class="header-anchor" href="#数论" aria-hidden="true">#</a> 数论</h3><h3 id="信息论" tabindex="-1"><a class="header-anchor" href="#信息论" aria-hidden="true">#</a> 信息论</h3><h3 id="运筹学" tabindex="-1"><a class="header-anchor" href="#运筹学" aria-hidden="true">#</a> 运筹学</h3><h3 id="博弈论、决策论" tabindex="-1"><a class="header-anchor" href="#博弈论、决策论" aria-hidden="true">#</a> 博弈论、决策论</h3><h2 id="离散数学与编程" tabindex="-1"><a class="header-anchor" href="#离散数学与编程" aria-hidden="true">#</a> 离散数学与编程</h2><p>项目管理与图</p><p>词法分析与状态机</p><p>语法分析与下推自动机</p><p>进程、网络与状态机</p><p>数据查询(SQL) 与集合</p><p>数据库与(B+)树</p><p>权限管理和树</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>',37),o={href:"https://zh.wikipedia.org/zh-cn/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6",target:"_blank",rel:"noopener noreferrer"};function l(u,f){const e=h("ExternalLinkIcon");return i(),d("div",null,[s,a("p",null,[a("a",o,[n("离散数学 - wiki"),t(e)])])])}const m=r(c,[["render",l],["__file","0.概览.html.vue"]]);export{m as default};
